{"version":3,"sources":["busDisplayTable.js","bus.js","index.js"],"names":["columns","key","name","sortable","sortDescendingFirst","BusDisplayTable","state","rows","convertBuses","props","buses","initialRows","onGridRowsUpdated","fromRow","toRow","updated","setState","slice","i","sortRows","sortColumn","sortDirection","sort","a","b","busProps","length","busProp","bus","no","routeShortName","route","routeLongName","stop","stopName","time","push","this","nextProps","inRows","rowGetter","rowsCount","onGridSort","setRows","enableCellSelect","React","Component","Bus","tripId","stopId","direction","application","trip","getTripPromise","then","locTrip","getRoutePromise","route_id","bind","locRoute","route_long_name","route_short_name","stateUpdateCallback","getStopPromise","locStop","stop_name","fetch","res","json","routeId","tripUpdateId","uqStops","App","departingBuses","arrivingBuses","getBuses","concat","forceUpdate","today","Date","today_brisbane","toLocaleString","timezone","date","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","getSeconds","busPromises","stopTimes","getBusesForStop","Promise","all","values","forEach","value","busJSON","stop_id","trip_id","departure_time","console","log","className","app","ReactDOM","render","document","getElementById"],"mappings":"6RAGMA,EAAU,CACZ,CAACC,IAAK,KAAMC,KAAO,MAAOC,UAAW,GACrC,CAACF,IAAK,QAASC,KAAO,SACtB,CAACD,IAAK,OAAQC,KAAO,OAAQC,UAAW,GACxC,CAACF,IAAK,OAAQC,KAAO,OAAQC,UAAW,EAAMC,qBAAsB,IAmFzDC,E,2MA/EXC,MAAQ,CACNC,KAAO,EAAKC,aAAa,EAAKC,MAAMC,OACpCC,YAAc,EAAKH,aAAa,EAAKC,MAAMC,Q,EAqC7CE,kBAAoB,YAAkC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACnC,EAAKC,UAAS,SAAAV,GAEZ,IADA,IAAIC,EAAOD,EAAMC,KAAKU,QACbC,EAAIL,EAASK,GAAKJ,EAAOI,IAChCX,EAAKW,GAAL,eAAeX,EAAKW,GAApB,GAA2BH,GAE7B,MAAO,CAAER,Y,EAIfY,SAAW,SAACR,EAAaS,EAAYC,GAQnC,MAAyB,SAAlBA,EAA2BV,EAAc,YAAI,EAAKL,MAAMC,MAAMe,MAPpD,SAACC,EAAGC,GACnB,MAAsB,QAAlBH,EACKE,EAAEH,GAAcI,EAAEJ,GAAc,GAAK,EACjB,SAAlBC,EACFE,EAAEH,GAAcI,EAAEJ,GAAc,GAAK,OADvC,M,4EAhDEK,GAGT,IAFA,IAAIf,EAAQ,GAEHQ,EAAI,EAAGA,EAAIO,EAASC,OAAQR,IAAK,CACtC,IAAIS,EAAUF,EAASP,GACnBU,EAAM,CAACC,GAAGF,EAAQG,eAAgBC,MAAMJ,EAAQK,cAChDC,KAAKN,EAAQO,SAAUC,KAAKR,EAAQQ,MACxCzB,EAAM0B,KAAKR,GAGf,OAAOlB,I,0CAIT2B,KAAKrB,SAAS,CACZT,KAAO8B,KAAK7B,aAAa6B,KAAK5B,MAAMC,OACpCC,YAAa0B,KAAK/B,MAAMC,S,gDAIF+B,GACxBD,KAAKrB,SAAS,CACZT,KAAO8B,KAAK7B,aAAa6B,KAAK5B,MAAMC,OACpCC,YAAa0B,KAAK/B,MAAMC,S,8BAIpBgC,GACNF,KAAKrB,SAAS,CACZT,KAAOgC,EACP5B,YAAa0B,KAAK/B,MAAMC,S,+BAyBlB,IAAD,OACL,OACE,kBAAC,IAAD,CACEP,QAASA,EACTwC,UAAW,SAAAtB,GAAC,OAAI,EAAKZ,MAAMC,KAAKW,IAChCuB,UAAWJ,KAAK/B,MAAMC,KAAKmB,OAC3Bd,kBAAmByB,KAAKzB,kBACxB8B,WACG,SAACtB,EAAYC,GAAb,OACC,EAAKsB,QACH,EAAKxB,SAAS,EAAKb,MAAMK,YAAaS,EAAYC,KAGxDuB,kBAAkB,Q,GA1EAC,IAAMC,WC4DnBC,E,WArEb,WAAYC,EAAQC,EAAQd,EAAMe,EAAWC,GAAc,IAAD,2BAExDd,KAAKW,OAASA,EACdX,KAAKY,OAASA,EACdZ,KAAKa,UAAYA,EAEjBb,KAAKF,KAAO,cACZE,KAAKe,KAAO,cAEZf,KAAKN,MAAQ,eACbM,KAAKL,cAAgB,eACrBK,KAAKP,eAAiB,eAEtBO,KAAKJ,KAAO,eACZI,KAAKH,SAAW,eAEGG,KAAKgB,eAAehB,KAAKW,QAAQM,KAAK,SAASC,GAEhE,OADAlB,KAAKe,KAAOG,EAAQ,GACblB,KAAKmB,gBAAgBD,EAAQ,GAAGE,WACvCC,KAAKrB,OAEkCiB,KAAK,SAASK,GACrDtB,KAAKN,MAAQ4B,EACbtB,KAAKL,cAAgB2B,EAAS,GAAGC,gBACjCvB,KAAKP,eAAiB6B,EAAS,GAAGE,kBAClCH,KAAKrB,OAEeiB,KAAK,WACzBjB,KAAKF,KAAOA,EACZgB,EAAYW,uBACZJ,KAAKrB,OAGHA,KAAK0B,eAAed,GAAQK,KAAK,SAASU,GAC5C3B,KAAKJ,KAAO+B,EACZ3B,KAAKH,SAAW8B,EAAQ,GAAGC,WAC3BP,KAAKrB,OAEciB,MACnB,kBAAMH,EAAYW,oBAAoB,EAAM,EAAKZ,c,2DAItCF,GACb,OAAOkB,MAAM,yCAA2ClB,EAAS,KAC5DM,MAAK,SAAAa,GAAG,OAAIA,EAAIC,Y,sCAGPC,GACd,OAAOH,MAAM,2CAA6CG,EAAU,KAC/Df,MAAK,SAAAa,GAAG,OAAIA,EAAIC,Y,qCAGRnB,GACb,OAAOiB,MAAM,yCAA2CjB,EAAS,KAC5DK,MAAK,SAAAa,GAAG,OAAIA,EAAIC,Y,2CAGFpB,GACnB,OAAOkB,MAAM,gDAAkDlB,EAAS,KACnEM,MAAK,SAAAa,GAAG,OAAIA,EAAIC,Y,wCAGLE,GAChB,OAAOJ,MAAM,4DAA8DI,EAAe,KACrFhB,MAAK,SAAAa,GAAG,OAAIA,EAAIC,c,KC5DrBG,EAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAEnDC,E,2MAEJlE,MAAQ,CACNmE,eAAgB,GAChBC,cAAe,I,mFAIfrC,KAAKsC,a,0CAGa/C,EAAKsB,GACvB,IAAIxC,EAAQ,CAACkB,GAEK,cAAdsB,GACFxC,EAAQ2B,KAAK/B,MAAMmE,eAAeG,OAAOlE,GACzC2B,KAAKrB,SAAS,CACZyD,eAAiB/D,EACjBgE,cAAgBrC,KAAK/B,MAAMoE,iBAEN,aAAdxB,IACTxC,EAAQ2B,KAAK/B,MAAMoE,cAAcE,OAAOlE,GACxC2B,KAAKrB,SAAS,CACZyD,eAAiBpC,KAAK/B,MAAMmE,eAC5BC,cAAgBhE,KAIpB2B,KAAKwC,gB,sCAGS5B,GACd,IAAI6B,EAAQ,IAAIC,KACZC,EAAiB,IAAID,KAAKD,EAAMG,eAAe,QAAS,CAACC,SAAU,wBAEnEC,EAAOH,EAAeI,cAAgB,KACnCJ,EAAeK,WAAa,GAAGC,WAAWC,SAAS,EAAG,KAAO,IAC9DP,EAAeQ,UAAUF,WAAWC,SAAS,EAAG,KAElDpD,EAAO6C,EAAeS,WAAWH,WAAWC,SAAS,EAAG,KACtD,IAAMP,EAAeU,aAAaJ,WAAWC,SAAS,EAAG,KACzD,IAAMP,EAAeW,aAAaL,WAAWC,SAAS,EAAG,KAE/D,OAAOrB,MAAM,8CAAgDjB,EAAS,iBAAmBkC,EAAO,IAAMhD,EAAO,KAC1GmB,MAAK,SAAAa,GACJ,OAAOA,EAAIC,Y,iCAQf,IAJU,IAAD,OACLwB,EAAc,GACdC,EAAY,GAEP3E,EAAI,EAAGA,EAAIqD,EAAQ7C,OAAQR,IAClC0E,EAAcA,EAAYhB,OAAOvC,KAAKyD,gBAAgBvB,EAAQrD,KAGhE6E,QAAQC,IAAIJ,GAAatC,MAAK,SAAA2C,GAC5BA,EAAOC,SAAQ,SAAAC,GAAK,OAAIN,EAAYA,EAAUjB,OAAOuB,MAErDN,EAAUK,SAAQ,SAAAE,GAChB,IAAIlD,EAAgC,SAApBkD,EAAQC,QAAqB,YAAc,WACvDzE,EAAM,IAAImB,EAAIqD,EAAQE,QAASF,EAAQC,QACvCD,EAAQG,eAAgBrD,EAAW,GACvCsD,QAAQC,IAAI7E,W,+BAMhB,OACA,yBAAK8E,UAAU,YACb,0CACA,kBAAC,EAAD,CAAiBC,IAAOtE,KAAM3B,MAAS2B,KAAK/B,MAAMmE,iBAClD,wCACA,kBAAC,EAAD,CAAiBkC,IAAOtE,KAAM3B,MAAS2B,KAAK/B,MAAMoE,qB,GA3EtC7B,IAAMC,WAiFxB8D,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.6e6f4ef1.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nconst columns = [\r\n    {key: \"no\", name : \"No.\", sortable : true},\r\n    {key: \"route\", name : \"Route\"},\r\n    {key: \"stop\", name : \"Stop\", sortable : true},\r\n    {key: \"time\", name : \"Time\", sortable : true, sortDescendingFirst : true}\r\n];\r\n\r\nclass BusDisplayTable extends React.Component {\r\n    state = {\r\n      rows : this.convertBuses(this.props.buses), \r\n      initialRows : this.convertBuses(this.props.buses)\r\n    };\r\n\r\n    convertBuses(busProps) {\r\n        var buses = [];\r\n\r\n        for (var i = 0; i < busProps.length; i++) {\r\n            var busProp = busProps[i];\r\n            var bus = {no:busProp.routeShortName, route:busProp.routeLongName,\r\n                stop:busProp.stopName, time:busProp.time};\r\n            buses.push(bus);\r\n        }\r\n\r\n        return buses;\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.setState({\r\n        rows : this.convertBuses(this.props.buses),\r\n        initialRows: this.state.rows\r\n      }); \r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n      this.setState({\r\n        rows : this.convertBuses(this.props.buses),\r\n        initialRows: this.state.rows\r\n      }); \r\n    }\r\n\r\n    setRows(inRows) {\r\n      this.setState({\r\n        rows : inRows,\r\n        initialRows: this.state.rows\r\n      }); \r\n    }\r\n\r\n    onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\r\n        this.setState(state => {\r\n          var rows = state.rows.slice();\r\n          for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = { ...rows[i], ...updated };\r\n          }\r\n          return { rows };\r\n        });\r\n    };\r\n\r\n    sortRows = (initialRows, sortColumn, sortDirection) => {\r\n      const comparer = (a, b) => {\r\n        if (sortDirection === \"ASC\") {\r\n          return a[sortColumn] > b[sortColumn] ? 1 : -1;\r\n        } else if (sortDirection === \"DESC\") {\r\n          return a[sortColumn] < b[sortColumn] ? 1 : -1;\r\n        }\r\n      };\r\n      return sortDirection === \"NONE\" ? initialRows : [...this.state.rows].sort(comparer);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n          <ReactDataGrid\r\n            columns={columns}\r\n            rowGetter={i => this.state.rows[i]}\r\n            rowsCount={this.state.rows.length}\r\n            onGridRowsUpdated={this.onGridRowsUpdated}\r\n            onGridSort=\r\n              {(sortColumn, sortDirection) =>\r\n                this.setRows(\r\n                  this.sortRows(this.state.initialRows, sortColumn, sortDirection)\r\n                )\r\n              }\r\n            enableCellSelect={true}\r\n          />\r\n        );\r\n      }\r\n}\r\n\r\nexport default BusDisplayTable;","class Bus {\r\n    constructor(tripId, stopId, time, direction, application) {\r\n  \r\n      this.tripId = tripId;\r\n      this.stopId = stopId;\r\n      this.direction = direction;\r\n  \r\n      this.time = \"Loading... \";\r\n      this.trip = \"Loading... \";\r\n  \r\n      this.route = \"Loading...  \";\r\n      this.routeLongName = \"Loading...  \";\r\n      this.routeShortName = \"Loading...  \";\r\n  \r\n      this.stop = \"Loading...  \";\r\n      this.stopName = \"Loading...  \";\r\n  \r\n      var routePromise = this.getTripPromise(this.tripId).then(function(locTrip) {\r\n        this.trip = locTrip[0];\r\n        return this.getRoutePromise(locTrip[0].route_id);\r\n      }.bind(this));\r\n  \r\n      var completedRoutePromise = routePromise.then(function(locRoute) {\r\n        this.route = locRoute;\r\n        this.routeLongName = locRoute[0].route_long_name;\r\n        this.routeShortName = locRoute[0].route_short_name;\r\n      }.bind(this));\r\n  \r\n      completedRoutePromise.then(function() {\r\n        this.time = time;\r\n        application.stateUpdateCallback();\r\n      }.bind(this));\r\n  \r\n      var completedStopPromise = \r\n          this.getStopPromise(stopId).then(function(locStop) {\r\n        this.stop = locStop;\r\n        this.stopName = locStop[0].stop_name;\r\n      }.bind(this));\r\n  \r\n      completedStopPromise.then(\r\n        () => application.stateUpdateCallback(this, this.direction)\r\n      );\r\n    }\r\n  \r\n    getTripPromise(tripId) {\r\n      return fetch(\"http://uqbus.richal.tech/trip/trip_id/\" + tripId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getRoutePromise(routeId) {\r\n      return fetch(\"http://uqbus.richal.tech/route/route_id/\" + routeId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getStopPromise(stopId) {\r\n      return fetch(\"http://uqbus.richal.tech/stop/stop_id/\" + stopId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getTripUpdatePromise(tripId) {\r\n      return fetch(\"http://uqbus.richal.tech/trip_update/trip_id/\" + tripId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getStopTimeUpdate(tripUpdateId) {\r\n      return fetch(\"http://uqbus.richal.tech/stop_time_update/trip_update_id/\" + tripUpdateId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  }\r\n\r\n  export default Bus;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport BusDisplayTable from './busDisplayTable.js';\r\nimport Bus from './bus.js';\r\n\r\nconst uqStops = [\"1853\", \"1877\", \"1878\", \"1880\", \"1883\", \"1882\"];\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    departingBuses: [],\r\n    arrivingBuses: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getBuses();\r\n  }\r\n\r\n  stateUpdateCallback(bus, direction) {\r\n    var buses = [bus];\r\n\r\n    if (direction === \"departing\") {\r\n      buses = this.state.departingBuses.concat(buses);\r\n      this.setState({\r\n        departingBuses : buses,\r\n        arrivingBuses : this.state.arrivingBuses\r\n      });\r\n    } else if (direction === \"arriving\") {\r\n      buses = this.state.arrivingBuses.concat(buses);\r\n      this.setState({\r\n        departingBuses : this.state.departingBuses,\r\n        arrivingBuses : buses\r\n      });\r\n    }\r\n    \r\n    this.forceUpdate();\r\n  }\r\n\r\n  getBusesForStop(stopId) {\r\n    var today = new Date();\r\n    var today_brisbane = new Date(today.toLocaleString('en-US', {timezone: \"Australia/Brisbane\"}));\r\n\r\n    var date = today_brisbane.getFullYear() + '-' \r\n        + (today_brisbane.getMonth() + 1).toString().padStart(2, \"0\") + '-' \r\n        + today_brisbane.getDate().toString().padStart(2, \"0\");\r\n\r\n    var time = today_brisbane.getHours().toString().padStart(2, \"0\") \r\n        + ':' + today_brisbane.getMinutes().toString().padStart(2, \"0\") \r\n        + ':' + today_brisbane.getSeconds().toString().padStart(2, \"0\");\r\n\r\n    return fetch(\"http://uqbus.richal.tech/stop_time/stop_id/\" + stopId + \"/current_time/\" + date + \" \" + time + \"/\")\r\n      .then(res => {\r\n        return res.json();\r\n      });\r\n  }\r\n\r\n  getBuses() {\r\n    var busPromises = [];\r\n    var stopTimes = [];\r\n\r\n    for (var i = 0; i < uqStops.length; i++) {\r\n      busPromises = busPromises.concat(this.getBusesForStop(uqStops[i]));\r\n    }\r\n\r\n    Promise.all(busPromises).then(values => {\r\n      values.forEach(value => stopTimes = stopTimes.concat(value));\r\n\r\n      stopTimes.forEach(busJSON => {\r\n        var direction = busJSON.stop_id !== \"1882\" ? \"departing\" : \"arriving\";\r\n        var bus = new Bus(busJSON.trip_id, busJSON.stop_id, \r\n            busJSON.departure_time, direction, this);\r\n        console.log(bus);\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"BusTable\">\r\n      <h2>Departures</h2>\r\n      <BusDisplayTable app = {this} buses = {this.state.departingBuses}/>\r\n      <h2>Arrivals</h2>\r\n      <BusDisplayTable app = {this} buses = {this.state.arrivingBuses}/>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <App></App>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}