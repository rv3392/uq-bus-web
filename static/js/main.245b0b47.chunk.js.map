{"version":3,"sources":["busDisplayTable.js","bus.js","index.js"],"names":["BusDisplayTable","state","rows","convertBuses","props","buses","initialRows","loading","classes","useStyles","makeStyles","theme","table","minWidth","display","marginTop","spacing","colorPrimary","busProps","i","length","busProp","bus","no","routeShortName","route","routeLongName","stop","stopName","time","push","this","setState","nextProps","map","TableRow","TableCell","align","CircularProgress","color","style","TableContainer","component","Paper","Table","className","size","aria-label","width","TableHead","TableBody","getRows","getTable","getLoadingCircle","React","Component","Bus","tripId","stopId","direction","application","trip","isLoading","stopsDictionary","getTripPromise","then","locTrip","getRoutePromise","route_id","bind","locRoute","route_long_name","route_short_name","substring","stateUpdateCallback","getStopPromise","locStop","stop_name","fetch","res","json","routeId","tripUpdateId","uqStops","App","departingBuses","arrivingBuses","loadingDepartingBuses","loadingArrivingBuses","departingLoading","arrivingLoading","getBuses","concat","forEach","forceUpdate","stops","today","Date","today_brisbane","toLocaleString","timezone","date","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","getSeconds","console","log","stopTimes","busJSON","stop_id","trip_id","departure_time","Grid","container","alignItems","justify","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.245b0b47.chunk.js","sourcesContent":["import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass BusDisplayTable extends React.Component {\r\n  state = {\r\n    rows : this.convertBuses(this.props.buses), \r\n    initialRows : this.convertBuses(this.props.buses),\r\n    loading : this.props.loading,\r\n    classes : this.useStyles()\r\n  };\r\n\r\n  useStyles() {\r\n    return makeStyles(theme => ({\r\n            table: {\r\n              minWidth: 500,\r\n            },\r\n\r\n            loading: {\r\n              display: 'flex',\r\n              '& > * + *': {\r\n                marginTop: theme.spacing(2),\r\n              },\r\n              colorPrimary: \"#fff\"\r\n            },\r\n          }));\r\n  }\r\n\r\n  convertBuses(busProps) {\r\n      var buses = [];\r\n\r\n      for (var i = 0; i < busProps.length; i++) {\r\n          var busProp = busProps[i];\r\n          var bus = {no:busProp.routeShortName, route:busProp.routeLongName,\r\n              stop:busProp.stopName, time:busProp.time};\r\n          buses.push(bus);\r\n      }\r\n\r\n      return buses;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      rows : this.convertBuses(this.props.buses),\r\n      initialRows: this.state.rows,\r\n      loading : this.props.loading\r\n    }); \r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      rows : this.convertBuses(this.props.buses),\r\n      initialRows: this.state.rows,\r\n      loading : this.props.loading\r\n    }); \r\n  }\r\n\r\n  getRows() {\r\n    return this.state.rows.map(bus => {\r\n      return <TableRow>\r\n                <TableCell align = \"right\">{bus.no}</TableCell>\r\n                <TableCell>{bus.route}</TableCell>\r\n                <TableCell align = \"center\">{bus.stop}</TableCell>\r\n                <TableCell>{bus.time}</TableCell>\r\n              </TableRow>\r\n    });\r\n  }\r\n\r\n  getLoadingCircle() {\r\n    return (\r\n      <div align = \"center\">\r\n          {this.state.loading === 'loading' ? (\r\n            <div>\r\n              <br></br>\r\n              <CircularProgress color=\"primary\" style={{color:\"#fff\"}}/>\r\n            </div>\r\n          ) : (<div></div>)}\r\n        </div>\r\n    );\r\n  }\r\n\r\n  getTable() {\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table className={this.state.classes.table} size=\"small\" aria-label=\"simple table\">\r\n          <colgroup>\r\n            <col style = {{width : '2%'}}/>\r\n            <col style = {{width : '83%'}}/>\r\n            <col style = {{width : '5%'}}/>\r\n            <col style = {{width : '10%'}}/>\r\n          </colgroup>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell></TableCell>\r\n              <TableCell align=\"left\">Route</TableCell>\r\n              <TableCell align=\"left\">Stop</TableCell>\r\n              <TableCell align=\"left\">Time</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.getRows()}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div>\r\n          {this.getTable()}\r\n          {this.getLoadingCircle()}\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default BusDisplayTable;","class Bus {\r\n    constructor(tripId, stopId, time, direction, application) {\r\n  \r\n      this.tripId = tripId;\r\n      this.stopId = stopId;\r\n      this.direction = direction;\r\n  \r\n      this.time = \"Loading... \";\r\n      this.trip = \"Loading... \";\r\n  \r\n      this.route = \"Loading...  \";\r\n      this.routeLongName = \"Loading...  \";\r\n      this.routeShortName = \"...\";\r\n  \r\n      this.stop = \"Loading...  \";\r\n      this.stopName = \"...\";\r\n\r\n      this.isLoading = true;\r\n\r\n      const stopsDictionary = {\"UQ Lakes, platform A\": \"A\",\r\n                                \"UQ Lakes, platform B\": \"B\",\r\n                                \"UQ Lakes, platform C\": \"C\",\r\n                                \"UQ Lakes, platform D\": \"D\",\r\n                                \"UQ Lakes, platform E\": \"E\",\r\n                                \"UQ Lakes station\": \"Any\"};\r\n  \r\n      var routePromise = this.getTripPromise(this.tripId).then(function(locTrip) {\r\n        this.trip = locTrip[0];\r\n\r\n        return this.getRoutePromise(locTrip[0].route_id);\r\n      }.bind(this));\r\n  \r\n      var timePromise = routePromise.then(function(locRoute) {\r\n        this.route = locRoute;\r\n        this.routeLongName = locRoute[0].route_long_name;\r\n        this.routeShortName = locRoute[0].route_short_name;\r\n      }.bind(this));\r\n  \r\n      var stopPromise = timePromise.then(function() {\r\n        this.time = time;\r\n        this.time = this.time.substring(0, 5);\r\n        application.stateUpdateCallback();\r\n\r\n        return this.getStopPromise(stopId)\r\n      }.bind(this));\r\n  \r\n      var loadCompletePromise = stopPromise.then(function(locStop) {\r\n        this.stop = locStop;\r\n        this.stopName = stopsDictionary[locStop[0].stop_name];\r\n      }.bind(this));\r\n  \r\n      loadCompletePromise.then(() => {\r\n          this.isLoading = false;\r\n          application.stateUpdateCallback(this, this.direction)\r\n        }\r\n      );\r\n    }\r\n  \r\n    getTripPromise(tripId) {\r\n      return fetch(\"http://uqbus.richal.tech/trip/trip_id/\" + tripId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getRoutePromise(routeId) {\r\n      return fetch(\"http://uqbus.richal.tech/route/route_id/\" + routeId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getStopPromise(stopId) {\r\n      return fetch(\"http://uqbus.richal.tech/stop/stop_id/\" + stopId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getTripUpdatePromise(tripId) {\r\n      return fetch(\"http://uqbus.richal.tech/trip_update/trip_id/\" + tripId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getStopTimeUpdate(tripUpdateId) {\r\n      return fetch(\"http://uqbus.richal.tech/stop_time_update/trip_update_id/\" + tripUpdateId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  }\r\n\r\n  export default Bus;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport BusDisplayTable from './busDisplayTable.js';\r\nimport Bus from './bus.js';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst uqStops = [\"1853\", \"1877\", \"1878\", \"1880\", \"1883\", \"1882\"];\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    departingBuses: [],\r\n    arrivingBuses: [],\r\n    loadingDepartingBuses: [],\r\n    loadingArrivingBuses: [],\r\n    departingLoading: \"loading\",\r\n    arrivingLoading: \"loading\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getBuses();\r\n  }\r\n\r\n  stateUpdateCallback(bus, direction) {\r\n    var buses = [bus];\r\n    var isLoading = \"done\";\r\n\r\n    if (direction === \"departing\") {\r\n      buses = this.state.departingBuses.concat(buses);\r\n      this.state.loadingDepartingBuses.forEach((bus) => \r\n          bus.isLoading === true ? isLoading = \"loading\" : isLoading); \r\n\r\n      this.setState({\r\n        departingBuses : buses,\r\n        arrivingBuses : this.state.arrivingBuses,\r\n        departingLoading : isLoading,\r\n      });\r\n    } else if (direction === \"arriving\") {\r\n      buses = this.state.arrivingBuses.concat(buses);\r\n      this.state.loadingArrivingBuses.forEach((bus) => \r\n          bus.isLoading === true ? isLoading = \"loading\" : isLoading);\r\n\r\n      this.setState({\r\n        departingBuses : this.state.departingBuses,\r\n        arrivingBuses : buses,\r\n        arrivingLoading : isLoading,\r\n      });\r\n    }\r\n    \r\n    this.forceUpdate();\r\n  }\r\n\r\n  getBuses() {\r\n    var stops = \"\"\r\n\r\n    var today = new Date();\r\n    var today_brisbane = new Date(today.toLocaleString('en-US', {timezone: \"Australia/Brisbane\"}));\r\n\r\n    var date = today_brisbane.getFullYear() + '-' \r\n        + (today_brisbane.getMonth() + 1).toString().padStart(2, \"0\") + '-' \r\n        + today_brisbane.getDate().toString().padStart(2, \"0\");\r\n\r\n    var time = today_brisbane.getHours().toString().padStart(2, \"0\") \r\n        + ':' + today_brisbane.getMinutes().toString().padStart(2, \"0\") \r\n        + ':' + today_brisbane.getSeconds().toString().padStart(2, \"0\");\r\n\r\n    for (var i = 0; i < uqStops.length; i++) {\r\n      stops = i === uqStops.length - 1 ? stops.toString() + uqStops[i].toString() : stops.toString() + uqStops[i].toString() + \",\"; \r\n    }\r\n\r\n    console.log(stops)\r\n\r\n    var busPromises = \r\n      fetch(\"http://uqbus.richal.tech/stop_time?time=\" + date + \" \" + time + \"&stop_id=\" + stops)\r\n      .then(res => {\r\n        return res.json();\r\n      });\r\n\r\n    busPromises.then(stopTimes => {\r\n      stopTimes.forEach(busJSON => {\r\n        var direction = busJSON.stop_id !== \"1882\" ? \"departing\" : \"arriving\";\r\n        var bus = new Bus(busJSON.trip_id, busJSON.stop_id, busJSON.departure_time, direction, this);\r\n        var buses = [bus];\r\n        if (direction === \"departing\") {\r\n          this.setState({loadingDepartingBuses : this.state.loadingDepartingBuses.concat(buses)});\r\n        } else {    \r\n          this.setState({loadingArrivingBuses : this.state.loadingArrivingBuses.concat(buses)});\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"BusTable\">\r\n      <h1 align = \"center\">UQBus</h1>\r\n      <h2 align = \"center\">UQ Lakes</h2>\r\n      <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n        <Grid item style = {{minWidth: 345, width: \"60%\"}}>\r\n          <h3>Departures</h3>\r\n          <BusDisplayTable loading = {this.state.departingLoading} buses = {this.state.departingBuses}/>\r\n        </Grid>\r\n        <Grid item style = {{minWidth: 345, width: \"60%\"}}>\r\n          <h3>Arrivals</h3>\r\n          <BusDisplayTable loading = {this.state.arrivingLoading} buses = {this.state.arrivingBuses}/>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <App></App>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}