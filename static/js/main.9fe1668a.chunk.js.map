{"version":3,"sources":["BusDisplayTable.js","index.js"],"names":["BusDisplayTable","buses","length","map","bus","index","key","routeShortName","routeLongName","stopName","time","stopId","tripId","uqStops","Bus","direction","application","this","trip","route","stop","getTripPromise","then","locTrip","getRoutePromise","route_id","bind","locRoute","route_long_name","route_short_name","stateUpdateCallback","getStopPromise","locStop","stop_name","fetch","res","json","routeId","tripUpdateId","App","state","departingBuses","arrivingBuses","getBuses","forceUpdate","today","Date","today_brisbane","toLocaleString","timezone","date","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","getSeconds","busPromises","stopTimes","i","concat","getBusesForStop","Promise","all","values","forEach","value","busJSON","stop_id","trip_id","departure_time","console","log","push","setState","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fe1668a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst BusDisplayTable = ({buses}) => {\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>No.</th>\r\n                    <th>Route</th>\r\n                    <th>Stop</th>\r\n                    <th>Time</th>\r\n                    <th>debug_stop_id</th>\r\n                    <th>debug_trip_id</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    (buses.length > 0) ? buses.map((bus, index) => {\r\n                        return (\r\n                            <tr key = {index}>\r\n                                <td>{bus.routeShortName}</td>\r\n                                <td>{bus.routeLongName}</td>\r\n                                <td>{bus.stopName}</td>\r\n                                <td>{bus.time}</td>\r\n                                <td>{bus.stopId}</td>\r\n                                <td>{bus.tripId}</td>\r\n                            </tr>\r\n                        )\r\n                    }) : <tr><td>Loading...</td></tr> \r\n                }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default BusDisplayTable;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport BusDisplayTable from './BusDisplayTable.js';\r\n\r\n//Gets bus details from 'trips' table using a trip_id\r\n//trip_id is one of the next 'x' busses departing from uq (stop_times)\r\n//Gets further bus details from 'routes' table using a route_id found in\r\n//'trips'\r\n\r\nconst uqStops = [\"1853\", \"1877\", \"1878\", \"1880\", \"1883\", \"1882\"];\r\n\r\nclass Bus {\r\n  constructor(tripId, stopId, time, direction, application) {\r\n\r\n    this.tripId = tripId;\r\n    this.stopId = stopId;\r\n    this.direction = direction;\r\n\r\n    this.time = \"Loading...  \";\r\n    this.trip = \"Loading...  \";\r\n\r\n    this.route = \"Loading...  \";\r\n    this.routeLongName = \"Loading...  \";\r\n    this.routeShortName = \"Loading...  \";\r\n\r\n    this.stop = \"Loading...  \";\r\n    this.stopName = \"Loading...  \";\r\n\r\n    var routePromise = this.getTripPromise(this.tripId).then(function(locTrip) {\r\n      this.trip = locTrip[0];\r\n      return this.getRoutePromise(locTrip[0].route_id);\r\n    }.bind(this));\r\n\r\n    var completedRoutePromise = routePromise.then(function(locRoute) {\r\n      this.route = locRoute;\r\n      this.routeLongName = locRoute[0].route_long_name;\r\n      this.routeShortName = locRoute[0].route_short_name;\r\n    }.bind(this));\r\n\r\n    completedRoutePromise.then(function() {\r\n      this.time = time;\r\n      application.stateUpdateCallback();\r\n    }.bind(this));\r\n\r\n    var completedStopPromise = \r\n        this.getStopPromise(stopId).then(function(locStop) {\r\n      this.stop = locStop;\r\n      this.stopName = locStop[0].stop_name;\r\n    }.bind(this));\r\n\r\n    completedStopPromise.then(() => application.stateUpdateCallback);\r\n  }\r\n\r\n  getTripPromise(tripId) {\r\n    return fetch(\"http://uqbus.richal.tech/trip/trip_id/\" + tripId + \"/\")\r\n        .then(res => res.json());\r\n  }\r\n\r\n  getRoutePromise(routeId) {\r\n    return fetch(\"http://uqbus.richal.tech/route/route_id/\" + routeId + \"/\")\r\n        .then(res => res.json());\r\n  }\r\n\r\n  getStopPromise(stopId) {\r\n    return fetch(\"http://uqbus.richal.tech/stop/stop_id/\" + stopId + \"/\")\r\n        .then(res => res.json());\r\n  }\r\n\r\n  getTripUpdatePromise(tripId) {\r\n    return fetch(\"http://uqbus.richal.tech/trip_update/trip_id/\" + tripId + \"/\")\r\n        .then(res => res.json());\r\n  }\r\n\r\n  getStopTimeUpdate(tripUpdateId) {\r\n    return fetch(\"http://uqbus.richal.tech/stop_time_update/trip_update_id/\" + tripUpdateId + \"/\")\r\n        .then(res => res.json());\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    departingBuses: [],\r\n    arrivingBuses: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getBuses();\r\n  }\r\n\r\n  stateUpdateCallback() {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  getBusesForStop(stopId) {\r\n    var today = new Date();\r\n    var today_brisbane = new Date(today.toLocaleString('en-US', {timezone: \"Australia/Brisbane\"}));\r\n\r\n    var date = today_brisbane.getFullYear() + '-' \r\n        + (today_brisbane.getMonth() + 1).toString().padStart(2, \"0\") + '-' \r\n        + today_brisbane.getDate().toString().padStart(2, \"0\");\r\n\r\n    var time = today_brisbane.getHours().toString().padStart(2, \"0\") \r\n        + ':' + today_brisbane.getMinutes().toString().padStart(2, \"0\") \r\n        + ':' + today_brisbane.getSeconds().toString().padStart(2, \"0\");\r\n\r\n    return fetch(\"http://uqbus.richal.tech/stop_time/stop_id/\" \r\n        + stopId + \"/current_time/\" + date + \" \" + time + \"/\")\r\n        .then(res => {\r\n          return res.json();\r\n        });\r\n  }\r\n\r\n  getBuses() {\r\n    var busPromises = [];\r\n    var stopTimes = [];\r\n    var departingBuses = [];\r\n    var arrivingBuses = [];\r\n\r\n    for (var i = 0; i < uqStops.length; i++) {\r\n      busPromises = busPromises.concat(this.getBusesForStop(uqStops[i]));\r\n    }\r\n\r\n    Promise.all(busPromises).then(values => {\r\n      values.forEach(value => stopTimes = stopTimes.concat(value));\r\n      stopTimes.forEach(busJSON => {\r\n        var direction = busJSON.stop_id !== \"1882\" ? \"departing\" : \"arriving\";\r\n        var bus = new Bus(busJSON.trip_id, busJSON.stop_id, \r\n            busJSON.departure_time, direction, this);\r\n        console.log(bus);\r\n\r\n        if (direction === \"departing\") {\r\n          departingBuses.push(bus);\r\n        } else {\r\n          arrivingBuses.push(bus);\r\n        }\r\n      });\r\n\r\n      this.setState({\r\n        departingBuses: departingBuses,\r\n        arrivingBuses: arrivingBuses\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"BusTable\">\r\n      <h2>Departures</h2>\r\n      <BusDisplayTable buses = {this.state.departingBuses}/>\r\n      <h2>Arrivals</h2>\r\n      <BusDisplayTable buses = {this.state.arrivingBuses}/>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <App></App>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}