{"version":3,"sources":["busDisplayTable.js","bus.js","index.js"],"names":["BusDisplayTable","state","rows","convertBuses","props","buses","initialRows","classes","useStyles","table","minWidth","busProps","i","length","busProp","bus","no","routeShortName","route","routeLongName","stop","stopName","time","push","this","setState","nextProps","map","TableRow","TableCell","TableContainer","component","Paper","Table","className","size","aria-label","style","width","TableHead","align","TableBody","getRows","React","Component","Bus","tripId","stopId","direction","application","trip","getTripPromise","then","locTrip","getRoutePromise","route_id","bind","locRoute","route_long_name","route_short_name","stateUpdateCallback","getStopPromise","locStop","stop_name","fetch","res","json","routeId","tripUpdateId","uqStops","App","departingBuses","arrivingBuses","getBuses","concat","forceUpdate","stops","today","Date","today_brisbane","toLocaleString","timezone","date","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","getSeconds","console","log","stopTimes","forEach","busJSON","stop_id","trip_id","departure_time","Grid","container","spacing","alignItems","justify","item","xs","app","ReactDOM","render","document","getElementById"],"mappings":"2TAyFeA,E,2MA/EbC,MAAQ,CACNC,KAAO,EAAKC,aAAa,EAAKC,MAAMC,OACpCC,YAAc,EAAKH,aAAa,EAAKC,MAAMC,OAC3CE,QAAU,EAAKC,a,2EAIf,MAAQ,CACAC,MAAO,CACLC,SAAU,Q,mCAKTC,GAGT,IAFA,IAAIN,EAAQ,GAEHO,EAAI,EAAGA,EAAID,EAASE,OAAQD,IAAK,CACtC,IAAIE,EAAUH,EAASC,GACnBG,EAAM,CAACC,GAAGF,EAAQG,eAAgBC,MAAMJ,EAAQK,cAChDC,KAAKN,EAAQO,SAAUC,KAAKR,EAAQQ,MACxCjB,EAAMkB,KAAKR,GAGf,OAAOV,I,0CAITmB,KAAKC,SAAS,CACZvB,KAAOsB,KAAKrB,aAAaqB,KAAKpB,MAAMC,OACpCC,YAAakB,KAAKvB,MAAMC,S,gDAIFwB,GACxBF,KAAKC,SAAS,CACZvB,KAAOsB,KAAKrB,aAAaqB,KAAKpB,MAAMC,OACpCC,YAAakB,KAAKvB,MAAMC,S,gCAK1B,OAAOsB,KAAKvB,MAAMC,KAAKyB,KAAI,SAAAZ,GACzB,OAAO,kBAACa,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,KAAYd,EAAIC,IAChB,kBAACa,EAAA,EAAD,KAAYd,EAAIG,OAChB,kBAACW,EAAA,EAAD,KAAYd,EAAIK,MAChB,kBAACS,EAAA,EAAD,KAAYd,EAAIO,Y,+BAM1B,OACE,kBAACQ,EAAA,EAAD,CAAgBC,UAAWC,KACzB,kBAACC,EAAA,EAAD,CAAOC,UAAWV,KAAKvB,MAAMM,QAAQE,MAAO0B,KAAK,QAAQC,aAAW,gBAClE,kCACE,yBAAKC,MAAS,CAACC,MAAQ,QACvB,yBAAKD,MAAS,CAACC,MAAQ,SACvB,yBAAKD,MAAS,CAACC,MAAQ,SACvB,yBAAKD,MAAS,CAACC,MAAQ,UAEzB,kBAACC,EAAA,EAAD,KACE,kBAACX,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,CAAWW,MAAM,QAAjB,SACA,kBAACX,EAAA,EAAD,CAAWW,MAAM,QAAjB,QACA,kBAACX,EAAA,EAAD,CAAWW,MAAM,QAAjB,UAGJ,kBAACC,EAAA,EAAD,KACGjB,KAAKkB,iB,GAxEUC,IAAMC,WC6DnBC,E,WArEb,WAAYC,EAAQC,EAAQzB,EAAM0B,EAAWC,GAAc,IAAD,2BAExDzB,KAAKsB,OAASA,EACdtB,KAAKuB,OAASA,EACdvB,KAAKwB,UAAYA,EAEjBxB,KAAKF,KAAO,cACZE,KAAK0B,KAAO,cAEZ1B,KAAKN,MAAQ,eACbM,KAAKL,cAAgB,eACrBK,KAAKP,eAAiB,eAEtBO,KAAKJ,KAAO,eACZI,KAAKH,SAAW,eAEGG,KAAK2B,eAAe3B,KAAKsB,QAAQM,KAAK,SAASC,GAEhE,OADA7B,KAAK0B,KAAOG,EAAQ,GACb7B,KAAK8B,gBAAgBD,EAAQ,GAAGE,WACvCC,KAAKhC,OAEkC4B,KAAK,SAASK,GACrDjC,KAAKN,MAAQuC,EACbjC,KAAKL,cAAgBsC,EAAS,GAAGC,gBACjClC,KAAKP,eAAiBwC,EAAS,GAAGE,kBAClCH,KAAKhC,OAEe4B,KAAK,WACzB5B,KAAKF,KAAOA,EACZ2B,EAAYW,uBACZJ,KAAKhC,OAGHA,KAAKqC,eAAed,GAAQK,KAAK,SAASU,GAC5CtC,KAAKJ,KAAO0C,EACZtC,KAAKH,SAAWyC,EAAQ,GAAGC,WAC3BP,KAAKhC,OAEc4B,MACnB,kBAAMH,EAAYW,oBAAoB,EAAM,EAAKZ,c,2DAItCF,GACb,OAAOkB,MAAM,yCAA2ClB,EAAS,KAC5DM,MAAK,SAAAa,GAAG,OAAIA,EAAIC,Y,sCAGPC,GACd,OAAOH,MAAM,2CAA6CG,EAAU,KAC/Df,MAAK,SAAAa,GAAG,OAAIA,EAAIC,Y,qCAGRnB,GACb,OAAOiB,MAAM,yCAA2CjB,EAAS,KAC5DK,MAAK,SAAAa,GAAG,OAAIA,EAAIC,Y,2CAGFpB,GACnB,OAAOkB,MAAM,gDAAkDlB,EAAS,KACnEM,MAAK,SAAAa,GAAG,OAAIA,EAAIC,Y,wCAGLE,GAChB,OAAOJ,MAAM,4DAA8DI,EAAe,KACrFhB,MAAK,SAAAa,GAAG,OAAIA,EAAIC,c,aC1DrBG,EAAU,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAEnDC,E,2MAEJrE,MAAQ,CACNsE,eAAgB,GAChBC,cAAe,I,mFAIfhD,KAAKiD,a,0CAGa1D,EAAKiC,GACvB,IAAI3C,EAAQ,CAACU,GAEK,cAAdiC,GACF3C,EAAQmB,KAAKvB,MAAMsE,eAAeG,OAAOrE,GACzCmB,KAAKC,SAAS,CACZ8C,eAAiBlE,EACjBmE,cAAgBhD,KAAKvB,MAAMuE,iBAEN,aAAdxB,IACT3C,EAAQmB,KAAKvB,MAAMuE,cAAcE,OAAOrE,GACxCmB,KAAKC,SAAS,CACZ8C,eAAiB/C,KAAKvB,MAAMsE,eAC5BC,cAAgBnE,KAIpBmB,KAAKmD,gB,iCAiBL,IAdU,IAAD,OACLC,EAAQ,GAERC,EAAQ,IAAIC,KACZC,EAAiB,IAAID,KAAKD,EAAMG,eAAe,QAAS,CAACC,SAAU,wBAEnEC,EAAOH,EAAeI,cAAgB,KACnCJ,EAAeK,WAAa,GAAGC,WAAWC,SAAS,EAAG,KAAO,IAC9DP,EAAeQ,UAAUF,WAAWC,SAAS,EAAG,KAElDhE,EAAOyD,EAAeS,WAAWH,WAAWC,SAAS,EAAG,KACtD,IAAMP,EAAeU,aAAaJ,WAAWC,SAAS,EAAG,KACzD,IAAMP,EAAeW,aAAaL,WAAWC,SAAS,EAAG,KAEtD1E,EAAI,EAAGA,EAAIyD,EAAQxD,OAAQD,IAClCgE,EAAQhE,IAAMyD,EAAQxD,OAAS,EAAI+D,EAAMS,WAAahB,EAAQzD,GAAGyE,WAAaT,EAAMS,WAAahB,EAAQzD,GAAGyE,WAAa,IAG3HM,QAAQC,IAAIhB,GAGVZ,MAAM,2CAA6CkB,EAAO,IAAM5D,EAAO,YAAcsD,GACpFxB,MAAK,SAAAa,GACJ,OAAOA,EAAIC,UAGHd,MAAK,SAAAyC,GACfA,EAAUC,SAAQ,SAAAC,GAChB,IAAI/C,EAAgC,SAApB+C,EAAQC,QAAqB,YAAc,WACvDjF,EAAM,IAAI8B,EAAIkD,EAAQE,QAASF,EAAQC,QAASD,EAAQG,eAAgBlD,EAAW,GACvF2C,QAAQC,IAAI7E,W,+BAMhB,OACA,yBAAKmB,UAAU,YACb,wBAAIM,MAAQ,UAAZ,SACA,wBAAIA,MAAQ,UAAZ,oBACA,kBAAC2D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,SAASC,QAAQ,UACtD,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACb,0CACA,kBAAC,EAAD,CAAiBC,IAAOlF,KAAMnB,MAASmB,KAAKvB,MAAMsE,mBAItD,kBAAC4B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,SAASC,QAAQ,UACtD,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACb,wCACA,kBAAC,EAAD,CAAiBC,IAAOlF,KAAMnB,MAASmB,KAAKvB,MAAMuE,uB,GAjF1C7B,IAAMC,WAyFxB+D,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c268cc09.chunk.js","sourcesContent":["import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nclass BusDisplayTable extends React.Component {\r\n  state = {\r\n    rows : this.convertBuses(this.props.buses), \r\n    initialRows : this.convertBuses(this.props.buses),\r\n    classes : this.useStyles()\r\n  };\r\n\r\n  useStyles() {\r\n    return ({\r\n            table: {\r\n              minWidth: 500,\r\n            },\r\n          });\r\n  }\r\n\r\n  convertBuses(busProps) {\r\n      var buses = [];\r\n\r\n      for (var i = 0; i < busProps.length; i++) {\r\n          var busProp = busProps[i];\r\n          var bus = {no:busProp.routeShortName, route:busProp.routeLongName,\r\n              stop:busProp.stopName, time:busProp.time};\r\n          buses.push(bus);\r\n      }\r\n\r\n      return buses;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      rows : this.convertBuses(this.props.buses),\r\n      initialRows: this.state.rows\r\n    }); \r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      rows : this.convertBuses(this.props.buses),\r\n      initialRows: this.state.rows\r\n    }); \r\n  }\r\n\r\n  getRows() {\r\n    return this.state.rows.map(bus => {\r\n      return <TableRow>\r\n                <TableCell>{bus.no}</TableCell>\r\n                <TableCell>{bus.route}</TableCell>\r\n                <TableCell>{bus.stop}</TableCell>\r\n                <TableCell>{bus.time}</TableCell>\r\n              </TableRow>\r\n    });\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <TableContainer component={Paper}>\r\n          <Table className={this.state.classes.table} size=\"small\" aria-label=\"simple table\">\r\n            <colgroup>\r\n              <col style = {{width : '5%'}}/>\r\n              <col style = {{width : '40%'}}/>\r\n              <col style = {{width : '40%'}}/>\r\n              <col style = {{width : '15%'}}/>\r\n            </colgroup>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell></TableCell>\r\n                <TableCell align=\"left\">Route</TableCell>\r\n                <TableCell align=\"left\">Stop</TableCell>\r\n                <TableCell align=\"left\">Time</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.getRows()}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      );\r\n    }\r\n}\r\n\r\nexport default BusDisplayTable;","class Bus {\r\n    constructor(tripId, stopId, time, direction, application) {\r\n  \r\n      this.tripId = tripId;\r\n      this.stopId = stopId;\r\n      this.direction = direction;\r\n  \r\n      this.time = \"Loading... \";\r\n      this.trip = \"Loading... \";\r\n  \r\n      this.route = \"Loading...  \";\r\n      this.routeLongName = \"Loading...  \";\r\n      this.routeShortName = \"Loading...  \";\r\n  \r\n      this.stop = \"Loading...  \";\r\n      this.stopName = \"Loading...  \";\r\n  \r\n      var routePromise = this.getTripPromise(this.tripId).then(function(locTrip) {\r\n        this.trip = locTrip[0];\r\n        return this.getRoutePromise(locTrip[0].route_id);\r\n      }.bind(this));\r\n  \r\n      var completedRoutePromise = routePromise.then(function(locRoute) {\r\n        this.route = locRoute;\r\n        this.routeLongName = locRoute[0].route_long_name;\r\n        this.routeShortName = locRoute[0].route_short_name;\r\n      }.bind(this));\r\n  \r\n      completedRoutePromise.then(function() {\r\n        this.time = time;\r\n        application.stateUpdateCallback();\r\n      }.bind(this));\r\n  \r\n      var completedStopPromise = \r\n          this.getStopPromise(stopId).then(function(locStop) {\r\n        this.stop = locStop;\r\n        this.stopName = locStop[0].stop_name;\r\n      }.bind(this));\r\n  \r\n      completedStopPromise.then(\r\n        () => application.stateUpdateCallback(this, this.direction)\r\n      );\r\n    }\r\n  \r\n    getTripPromise(tripId) {\r\n      return fetch(\"http://uqbus.richal.tech/trip/trip_id/\" + tripId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getRoutePromise(routeId) {\r\n      return fetch(\"http://uqbus.richal.tech/route/route_id/\" + routeId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getStopPromise(stopId) {\r\n      return fetch(\"http://uqbus.richal.tech/stop/stop_id/\" + stopId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getTripUpdatePromise(tripId) {\r\n      return fetch(\"http://uqbus.richal.tech/trip_update/trip_id/\" + tripId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getStopTimeUpdate(tripUpdateId) {\r\n      return fetch(\"http://uqbus.richal.tech/stop_time_update/trip_update_id/\" + tripUpdateId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  }\r\n\r\n  export default Bus;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport BusDisplayTable from './busDisplayTable.js';\r\nimport Bus from './bus.js';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst uqStops = [\"1853\", \"1877\", \"1878\", \"1880\", \"1883\", \"1882\"];\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    departingBuses: [],\r\n    arrivingBuses: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getBuses();\r\n  }\r\n\r\n  stateUpdateCallback(bus, direction) {\r\n    var buses = [bus];\r\n\r\n    if (direction === \"departing\") {\r\n      buses = this.state.departingBuses.concat(buses);\r\n      this.setState({\r\n        departingBuses : buses,\r\n        arrivingBuses : this.state.arrivingBuses\r\n      });\r\n    } else if (direction === \"arriving\") {\r\n      buses = this.state.arrivingBuses.concat(buses);\r\n      this.setState({\r\n        departingBuses : this.state.departingBuses,\r\n        arrivingBuses : buses\r\n      });\r\n    }\r\n    \r\n    this.forceUpdate();\r\n  }\r\n\r\n  getBuses() {\r\n    var stops = \"\"\r\n\r\n    var today = new Date();\r\n    var today_brisbane = new Date(today.toLocaleString('en-US', {timezone: \"Australia/Brisbane\"}));\r\n\r\n    var date = today_brisbane.getFullYear() + '-' \r\n        + (today_brisbane.getMonth() + 1).toString().padStart(2, \"0\") + '-' \r\n        + today_brisbane.getDate().toString().padStart(2, \"0\");\r\n\r\n    var time = today_brisbane.getHours().toString().padStart(2, \"0\") \r\n        + ':' + today_brisbane.getMinutes().toString().padStart(2, \"0\") \r\n        + ':' + today_brisbane.getSeconds().toString().padStart(2, \"0\");\r\n\r\n    for (var i = 0; i < uqStops.length; i++) {\r\n      stops = i === uqStops.length - 1 ? stops.toString() + uqStops[i].toString() : stops.toString() + uqStops[i].toString() + \",\"; \r\n    }\r\n\r\n    console.log(stops)\r\n\r\n    var busPromises = \r\n      fetch(\"http://uqbus.richal.tech/stop_time?time=\" + date + \" \" + time + \"&stop_id=\" + stops)\r\n      .then(res => {\r\n        return res.json();\r\n      });\r\n\r\n    busPromises.then(stopTimes => {\r\n      stopTimes.forEach(busJSON => {\r\n        var direction = busJSON.stop_id !== \"1882\" ? \"departing\" : \"arriving\";\r\n        var bus = new Bus(busJSON.trip_id, busJSON.stop_id, busJSON.departure_time, direction, this);\r\n        console.log(bus);\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"BusTable\">\r\n      <h1 align = \"center\">UQBus</h1>\r\n      <h2 align = \"center\">UQ Lakes Station</h2>\r\n      <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n        <Grid item xs={6}>\r\n          <h2>Departures</h2>\r\n          <BusDisplayTable app = {this} buses = {this.state.departingBuses}/>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\r\n        <Grid item xs={6}>\r\n          <h2>Arrivals</h2>\r\n          <BusDisplayTable app = {this} buses = {this.state.arrivingBuses}/>\r\n          </Grid>\r\n      </Grid>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <App></App>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}