{"version":3,"sources":["busDisplayTable.js","bus.js","busDisplay.js","index.js"],"names":["BusDisplayTable","state","rows","convertBuses","props","buses","initialRows","loading","classes","useStyles","makeStyles","theme","table","minWidth","display","marginTop","spacing","colorPrimary","busProps","i","length","busProp","bus","no","routeShortName","route","routeLongName","stop","stopName","time","push","this","setState","nextProps","map","TableRow","TableCell","align","CircularProgress","color","style","TableContainer","component","Paper","Table","className","aria-label","width","TableHead","TableBody","getRows","getTable","getLoadingCircle","React","Component","Bus","tripId","stopId","application","trip","isLoading","stopsDictionary","getTripPromise","then","locTrip","getRoutePromise","route_id","bind","locRoute","route_long_name","route_short_name","substring","getStopPromise","locStop","stop_name","stateUpdateCallback","fetch","res","json","routeId","tripUpdateId","uqStops","BusDisplay","loadingBuses","getBuses","console","log","concat","forEach","forceUpdate","stops","today","Date","today_brisbane","toLocaleString","timezone","date","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","getSeconds","stopTimes","busJSON","name","stop_id","trip_id","departure_time","App","class","Grid","container","direction","alignItems","justify","item","src","process","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b0e2058.chunk.js","sourcesContent":["import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass BusDisplayTable extends React.Component {\r\n  state = {\r\n    rows : this.convertBuses(this.props.buses), \r\n    initialRows : this.convertBuses(this.props.buses),\r\n    loading : this.props.loading,\r\n    classes : this.useStyles()\r\n  };\r\n\r\n  useStyles() {\r\n    return makeStyles(theme => ({\r\n            table: {\r\n              minWidth: 500,\r\n            },\r\n\r\n            loading: {\r\n              display: 'flex',\r\n              '& > * + *': {\r\n                marginTop: theme.spacing(2),\r\n              },\r\n              colorPrimary: \"#fff\"\r\n            },\r\n          }));\r\n  }\r\n\r\n  convertBuses(busProps) {\r\n      var buses = [];\r\n\r\n      for (var i = 0; i < busProps.length; i++) {\r\n          var busProp = busProps[i];\r\n          var bus = {no:busProp.routeShortName, route:busProp.routeLongName,\r\n              stop:busProp.stopName, time:busProp.time};\r\n          buses.push(bus);\r\n      }\r\n\r\n      return buses;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      rows : this.convertBuses(this.props.buses),\r\n      initialRows: this.state.rows,\r\n      loading : this.props.loading\r\n    }); \r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      rows : this.convertBuses(this.props.buses),\r\n      initialRows: this.state.rows,\r\n      loading : this.props.loading\r\n    }); \r\n  }\r\n\r\n  getRows() {\r\n    return this.state.rows.map(bus => {\r\n      return <TableRow>\r\n                <TableCell align = \"right\">{bus.no}</TableCell>\r\n                <TableCell>{bus.route}</TableCell>\r\n                <TableCell align = \"center\">{bus.stop}</TableCell>\r\n                <TableCell>{bus.time}</TableCell>\r\n              </TableRow>\r\n    });\r\n  }\r\n\r\n  getLoadingCircle() {\r\n    return (\r\n      <div align = \"center\">\r\n          {this.state.loading === 'loading' ? (\r\n            <div>\r\n              <br></br>\r\n              <CircularProgress color=\"primary\" style={{color:\"#fff\"}}/>\r\n            </div>\r\n          ) : (<div></div>)}\r\n        </div>\r\n    );\r\n  }\r\n\r\n  getTable() {\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table className={this.state.classes.table} aria-label=\"simple table\">\r\n          <colgroup>\r\n            <col style = {{width : '2%'}}/>\r\n            <col style = {{width : '83%'}}/>\r\n            <col style = {{width : '5%'}}/>\r\n            <col style = {{width : '10%'}}/>\r\n          </colgroup>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell></TableCell>\r\n              <TableCell align=\"left\">Route</TableCell>\r\n              <TableCell align=\"left\">Stop</TableCell>\r\n              <TableCell align=\"left\">Time</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.getRows()}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div>\r\n          {this.getTable()}\r\n          {this.getLoadingCircle()}\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default BusDisplayTable;","class Bus {\r\n    constructor(tripId, stopId, time, application) {\r\n  \r\n      this.tripId = tripId;\r\n      this.stopId = stopId;\r\n  \r\n      this.time = \"Loading... \";\r\n      this.trip = \"Loading... \";\r\n  \r\n      this.route = \"Loading...  \";\r\n      this.routeLongName = \"Loading...  \";\r\n      this.routeShortName = \"...\";\r\n  \r\n      this.stop = \"Loading...  \";\r\n      this.stopName = \"...\";\r\n\r\n      this.isLoading = true;\r\n\r\n      const stopsDictionary = {\"UQ Lakes, platform A\": \"A\",\r\n                                \"UQ Lakes, platform B\": \"B\",\r\n                                \"UQ Lakes, platform C\": \"C\",\r\n                                \"UQ Lakes, platform D\": \"D\",\r\n                                \"UQ Lakes, platform E\": \"E\",\r\n                                \"UQ Lakes station\": \"Any\"};\r\n  \r\n      var routePromise = this.getTripPromise(this.tripId).then(function(locTrip) {\r\n        this.trip = locTrip[0];\r\n\r\n        return this.getRoutePromise(locTrip[0].route_id);\r\n      }.bind(this));\r\n  \r\n      var timePromise = routePromise.then(function(locRoute) {\r\n        this.route = locRoute;\r\n        this.routeLongName = locRoute[0].route_long_name;\r\n        this.routeShortName = locRoute[0].route_short_name;\r\n      }.bind(this));\r\n  \r\n      var stopPromise = timePromise.then(function() {\r\n        this.time = time;\r\n        this.time = this.time.substring(0, 5);\r\n\r\n        return this.getStopPromise(stopId)\r\n      }.bind(this));\r\n  \r\n      var loadCompletePromise = stopPromise.then(function(locStop) {\r\n        this.stop = locStop;\r\n        this.stopName = stopsDictionary[locStop[0].stop_name];\r\n      }.bind(this));\r\n  \r\n      loadCompletePromise.then(function() {\r\n        this.isLoading = false;\r\n        application.stateUpdateCallback(this);\r\n      }.bind(this));\r\n    }\r\n  \r\n    getTripPromise(tripId) {\r\n      return fetch(\"http://uqbus.richal.tech/trip/trip_id/\" + tripId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getRoutePromise(routeId) {\r\n      return fetch(\"http://uqbus.richal.tech/route/route_id/\" + routeId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getStopPromise(stopId) {\r\n      return fetch(\"http://uqbus.richal.tech/stop/stop_id/\" + stopId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getTripUpdatePromise(tripId) {\r\n      return fetch(\"http://uqbus.richal.tech/trip_update/trip_id/\" + tripId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  \r\n    getStopTimeUpdate(tripUpdateId) {\r\n      return fetch(\"http://uqbus.richal.tech/stop_time_update/trip_update_id/\" + tripUpdateId + \"/\")\r\n          .then(res => res.json());\r\n    }\r\n  }\r\n\r\n  export default Bus;","import React from 'react';\r\nimport './index.css';\r\n\r\nimport BusDisplayTable from './busDisplayTable.js';\r\nimport Bus from './bus.js';\r\n\r\nconst uqStops = [\"1853\", \"1877\", \"1878\", \"1880\", \"1883\", \"1882\"];\r\n\r\nclass BusDisplay extends React.Component {\r\n    state = {\r\n        buses: [],\r\n        loadingBuses: [],\r\n        isLoading: \"loading\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getBuses();\r\n    }\r\n\r\n    stateUpdateCallback(bus) {\r\n        var isLoading = \"done\";\r\n\r\n        console.log(bus);\r\n\r\n        var buses = this.state.buses.concat([bus]);\r\n        this.state.loadingBuses.forEach((bus) => \r\n                bus.isLoading === true ? isLoading = \"loading\" : isLoading);\r\n\r\n        this.setState({\r\n            buses: buses,\r\n            isLoading: isLoading\r\n        });\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    getBuses() {\r\n        var stops = \"\"\r\n\r\n        var today = new Date();\r\n        var today_brisbane = new Date(today.toLocaleString('en-US', {timezone: \"Australia/Brisbane\"}));\r\n\r\n        var date = today_brisbane.getFullYear() + '-' \r\n            + (today_brisbane.getMonth() + 1).toString().padStart(2, \"0\") + '-' \r\n            + today_brisbane.getDate().toString().padStart(2, \"0\");\r\n\r\n        var time = today_brisbane.getHours().toString().padStart(2, \"0\") \r\n            + ':' + today_brisbane.getMinutes().toString().padStart(2, \"0\") \r\n            + ':' + today_brisbane.getSeconds().toString().padStart(2, \"0\");\r\n\r\n        for (var i = 0; i < uqStops.length; i++) {\r\n            stops = i === uqStops.length - 1 ? stops.toString() + uqStops[i].toString() : stops.toString() + uqStops[i].toString() + \",\"; \r\n        }\r\n\r\n        var busPromises = fetch(\"http://uqbus.richal.tech/stop_time?time=\" + date + \" \" + time + \"&stop_id=\" + stops)\r\n                .then(res => {\r\n                    return res.json();\r\n                });\r\n\r\n        busPromises.then(stopTimes => {\r\n            stopTimes.forEach(busJSON => {\r\n                let bus = \"\";\r\n                var buses = [];\r\n                console.log(busJSON);\r\n                if (this.props.name === \"Departing\") {\r\n                    console.log(busJSON);\r\n                    if (busJSON.stop_id !== \"1882\") {\r\n                        bus = new Bus(busJSON.trip_id, busJSON.stop_id, busJSON.departure_time, this);\r\n                        buses = [bus];\r\n                        this.setState({loadingBuses: this.state.loadingBuses.concat(buses)});\r\n                    }\r\n                } else if (this.props.name === \"Arriving\") {\r\n                    if (busJSON.stop_id === \"1882\") {\r\n                        bus = new Bus(busJSON.trip_id, busJSON.stop_id, busJSON.departure_time, this);\r\n                        buses = [bus];\r\n                        this.setState({loadingBuses: this.state.loadingBuses.concat(buses)});\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        if (this.state.loadingBuses.length === 0) {\r\n            console.log(this.state.loadingBuses);\r\n            this.setState({isLoading: \"done\"});\r\n\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"BusTable\">\r\n            <h3>{this.props.name}</h3>\r\n            <BusDisplayTable loading = {this.state.isLoading} buses = {this.state.buses}/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BusDisplay;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './index.css';\r\n\r\nimport BusDisplay from './busDisplay.js';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"title\">\r\n          <Grid container spacing={0} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n            <Grid item>\r\n              <img align=\"right\" src={process.env.PUBLIC_URL + '/busWhite96.png'} alt=\"\"/>\r\n            </Grid>\r\n            <Grid item>\r\n              <h1 align = \"left\">UQBus</h1>\r\n            </Grid>\r\n          </Grid>\r\n      </div>\r\n      <div class=\"uq-lakes-tables\">\r\n          <h2 align = \"center\">UQ Lakes</h2>\r\n          <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n            <Grid item style = {{minWidth: 345, width: \"60%\"}}>\r\n              <BusDisplay name = \"Departing\"></BusDisplay>\r\n            </Grid>\r\n            <Grid item style = {{minWidth: 345, width: \"60%\"}}>\r\n              <BusDisplay name = \"Arriving\"></BusDisplay>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <App></App>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}